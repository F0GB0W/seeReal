<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">
	<resultMap id="boardResultSet" type="board">
		<result column="board_no"		property="boardNo"/>
		<result column="board_title"	property="boardTitle"/>
		<result column="board_writer"	property="boardWriter"/>
		<result column="count"			property="count"/>
		<result column="enroll_date"	property="enrollDate"/>
		<result column="origin_name"	property="originName"/>
		<result column="change_name"	property="changeName"/>
		<result column="report_count"	property="reportCount"/>
		<result column="status"			property="status"/>
		<result column="board_type"		property="boardType"/>
		<result column="nick_name"		property="nickName"/>
		<result column="board_content"	property="boardContent"/>
	</resultMap>

	<select id="selectBoardListCount" resultType="_int">
	select
			count(*)
	  from
	  		board
	  where
	  		status = 'Y'
	</select>
	<select id="selectBoardList" resultMap="boardResultSet">
		select
				board_no,
				board_title,
				nick_name,
				count,
				to_char(enroll_date, 'YYYY-MM-DD') as "ENROLL_DATE",
				origin_name
		 from
				board b
		 join
		 		member on(member_no = board_writer)
		where
				b.status = 'Y'
		  and
		  		board_type = 2
		order
		   by
		   		board_no desc
	</select>
	
	<update id="sanctionsBoard" parameterType="_int">

		update
				board
		set
				status = 'N'
		where
				report_count >= 10			
	</update>
	<insert id="insertSpoiler" parameterType="board">
		insert
		  into
		  		board
		  		(
		  		board_no,
		  		board_title,
		  		board_writer,
		  		board_content,
		  		origin_name,
		  		change_name,
		  		board_type
		  		)
		values
				(
				seq_bno.nextval,
				#{boardTitle},
				#{boardWriter},
				#{boardContent},
				#{originName},
				#{changeName},
				2
				)
	</insert>
	<select id="spoilerDetailView" parameterType="board" resultMap="boardResultSet">
		select
				board_no,
				board_title,
				nick_name,
				to_char(enroll_date, 'YYYY-MM-DD') as "ENROLL_DATE",
				origin_name,
				change_name,
				board_content
				
		 from
		 		board b
		  join
		  		member on(member_no = board_writer)
		 where
		 		board_no = #{boardNo}
		   and
		   		b.status = 'Y'
		   and
		   		board_type = 2
				
				
	</select>
	<update id="spoilerIncreaseCount">
		update
				board
		   set
		   		count = count + 1
		 where
		  		board_no = #{boardNo}
		   and
		   		status = 'Y'
		   and
		   		board_type = 2
	</update>
<select id="spoilerSearchListCount" resultType="_int" parameterType="hashmap" >
select
		count(*)
 from
 		board
 join
 		member on(board_writer = member_no)
 where
 		board.status = 'Y'
   and
   		board_type = 2
 	<if test="condition == 'writer'">
 		and nick_name
 	</if>
	<if test="condition == 'title'">
		and board_title
	</if>
	<if test="condition == 'content'">
		and board_content
	</if>	
	like '%' || #{keyword} || '%'
	
</select>
<select id="spoilerSearchList" parameterType="hashmap" resultMap="boardResultSet">
select
		board_no,
		board_title,
		nick_name,
		count,
		enroll_date
  from
  		board
  join
  		member on(board_writer = member_no)
 where
 		board.status = 'Y'
   and
   		board_type = 2
 <choose>
 	<when test="condition == 'writer'">
 		and nick_name
 	</when>
	<when test="condition == 'title'">
		and board_title
	</when>
	<otherwise>
		and board_content
	</otherwise> 		
 </choose>
			like '%' || #{keyword} || '%'		
	order
	   by
	   		board_no desc	
		
</select>
<update id="spoilerUpdate" parameterType="board">
 update
 		board
 	set
 		board_title = #{boardTitle},
 		origin_name = #{originName},
 		change_name = #{changeName},
 		board_content = #{boardContent}
 where
   		board_no = #{boardNo}
 		

</update>
<update id="spoilerDelete" parameterType="board">
update
		board
   set
   		status = 'N'
  where
  		board_no = #{boardNo}
</update>
<insert id="spoilerReplyInsert" parameterType="boardReply">
insert
  into 
  		board_reply
  		(
  		 bo_reply_no,
  		 bo_reply_content,
  		 reply_writer,
  		 member_no,
  		 board_no
  		)
  values
  		(
  		seq_rbno.nextval,
  		#{boReplyContent},
  		#{replyWriter},
  		#{memberNo},
  		#{boardNo}
  		)


</insert>
<select id="spoilerReplyList" resultType="boardReply">
	select 
			bo_reply_no boReplyNo,
			reply_writer replyWriter,
			bo_reply_content boReplyContent,
			to_char(bo_reply_date, 'YYYY-MM-DD') as "boReplyDate"
	 from
	 		board_reply
	 join
	 		member using(member_no)
	 where
	 		bo_reply_status = 'Y'
	   and
	   		board_no = #{boardNo} 
	 order
	 	by
	 		bo_reply_no desc
</select>			
</mapper>
