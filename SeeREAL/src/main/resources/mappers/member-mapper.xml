<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap id="memberResultSet" type="member">
		<result column="MEMBER_NO" property="memberNo"/>
		<result column="MEMBER_EMAIL" property="memberEmail"/>
		<result column="NICK_NAME" property="memberNickname"/>
		<result column="MEMBER_PWD" property="memberPwd"/>
		<result column="MEMBER_PHONE" property="memberPhone"/>
		<result column="MEMBER_PHOTO" property="memberPhoto"/>
		<result column="MEMBER_CREATEDATE" property="memberCreateDate"/>
		<result column="MEMBER_MODIFYDATE" property="memberModifyDate"/>
		<result column="STATUS" property="status"/>
	</resultMap>
	
	<resultMap id="boardResultSet" type="board">
		<result column="board_no"		property="boardNo"/>
		<result column="board_title"	property="boardTitle"/>
		<result column="board_writer"	property="boardWriter"/>
		<result column="count"			property="count"/>
		<result column="enroll_date"	property="enrollDate"/>
		<result column="origin_name"	property="originName"/>
		<result column="change_name"	property="changeName"/>
		<result column="report_count"	property="reportCount"/>
		<result column="status"			property="status"/>
		<result column="board_type"		property="boardType"/>
		<result column="nick_name"		property="nickName"/>
		<result column="board_content"	property="boardContent"/>
		<result column="MEMBER_EMAIL" property="memberEmail"/>
	</resultMap>
	
	<resultMap id="meetingResultSet" type="meeting">
		<result column="MEETING_NO" property="meetingNo" />
		<result column="MEETING_TITLE" property="meetingTitle" />
		<result column="MEETING_EXP" property="meetingExp" />
		<result column="MEETING_PLACE" property="meetingPlace" />
		<result column="MEETING_PLACE_DETAIL" property="meetingPlaceDetail" />
		<result column="MOVIE_TITLE" property="movieTitle" />
		<result column="MOVIE_YEAR" property="movieYear" />
		<result column="STATUS" property="status" />
		<result column="MEETING_ENROLL" property="meetingEnrollDate" />
		<result column="MEMBER_NO" property="memberNo" />
		<result column="MEETING_REPORT" property="meetingReport" />
		<result column="MEETING_WRITER" property="meetingWriter" />
	</resultMap>
	
	<resultMap id="collectionResultSet"	type="movieCollection">
		<result column="COLLECTION_NO" property="collectionNo" />
		<result column="MEMBER_NO" property="memberNo" />
		<result column="ORIGIN_NAME" property="originName" />
		<result column="CHANGE_NAME" property="changeName" />
		<result column="COLLECTION_ENROLL" property="collectionEnroll" />
		<result column="COLLECTION_TITLE" property="collectionTitle" />
		<result column="COLLECTION_CONTENT" property="collectionContent" />
		<result column="NICK_NAME" property="nickName" />
	</resultMap>
	
	<resultMap id="commentsResultSet" type="comments">
		<result column="COMMENT_NO" property="commentNo"/>
		<result column="COMMENT_CONTENT" property="commentContent"/>
		<result column="COMMENTENROLLDATE" property="commentEnrollDate"/>
		<result column="SPOILER" property="spoiler"/>
		<result column="MOVIE_TITLE" property="movieTitle"/>
		<result column="MOVIE_YEAR" property="movieYear"/>
		<result column="MEMBER_NO" property="memberNo"/>
		<result column="COMMENT_REPORT" property="commentReport"/>
	</resultMap>
	
	<resultMap id="replyResultSet" type="boardReply">
		<result column="BOARD_NO" property="boardNo"/>
		<result column="BO_REPLY_NO" property="boReplyNo"/>
		<result column="BO_REPLY_STATUS" property="boReplyStatus"/>
		<result column="BOARD_TYPE" property="boardType"/>
		
		
		<result column="MEMBER_NO" property="memberNo"/>
		<result column="BO_REPLY_CONTENT" property="boReplyContent"/>
		<result column="BO_REPLY_DATE" property="boReplyDate"/>
	</resultMap>
	
	<!-- 이메일 중복체크를 위한 select -->
	<select id="selectEmail" parameterType="String" resultType="_int">
		select
			   count(member_email)
		  from 
		       member
		 where 
		       status = 'Y'
		   and 
		       member_email = #{email}
	</select>

	<!-- 이메일 전송 후, 인증을 위한 Cert테이블에 insert -->
	<insert id="insertCert" parameterType="cert">
		insert 
		  into 
		       cert
		       (
		       who
		       ,secret
		       ,when
		       ) 
		values
		       (
		       #{who}
		       ,#{secret}
		       ,sysdate
		       )
	</insert>
	
	<!-- 이메일 인증 번호 체크 select -->
	<select id = "selectCert" parameterType="cert" resultType="_int">
		select
			   COUNT(*)
		  from
			   cert
		 where 
			   who = #{who}
		   and 
		       secret = #{secret}
		   and 
		       when between sysdate - 5/24/60 and sysdate
	</select>
	
	<delete id="deleteCert" parameterType="cert">
		delete 
		  from 
		       cert
		 where 
		       who = #{who}
		   and 
		       secret = #{secret}
	</delete>
	
	<!-- 닉네임 중복체크를 위한 select -->
	<select id ="selectNickname" parameterType="String" resultType="string">
		select
			   count(*)
	      from 
	           member
	     where 
	           status='Y'
	       and 
	           nick_name = #{nickname}
	</select>
	
	<!-- 시간 지난 인증코드 삭제를 위한 delete -->
	<delete id ="timeout" parameterType="String">
		delete 
		  from 
		       cert
		 where 
		       who = #{who}
	</delete>
	
	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="member">
		insert 
		  into 
		       member
		       (
		       MEMBER_NO,
			   NICK_NAME,
			   MEMBER_PWD,
			    MEMBER_PHONE,
			   MEMBER_EMAIL
			   )
	   values
	          (
	          seq_mno.nextval,
	          #{memberNickname}, 
	          #{memberPwd},
	          #{memberPhone},
	          #{memberEmail} 
	          )
	</insert>
	
	<!--  로그인을 위한 select -->
	<select id="selectMember" parameterType="member" resultMap="memberResultSet">
		select 
			   MEMBER_NO
			   ,NICK_NAME
			   ,MEMBER_PWD
			   ,MEMBER_PHONE
			   ,MEMBER_EMAIL
			   ,MEMBER_PHOTO
			   ,MEMBER_CREATEDATE
			   ,MEMBER_MODIFYDATE
			   ,STATUS
		  from 
		       member
		 where 
		       (status != 'N' or status != 'S')
		   and 
		       MEMBER_EMAIL = #{memberEmail}
	</select>

	<!-- 비밀번호 수정을 위한 update  -->
	<update id="updatePwd" parameterType="member">
		update 
		       member
		   set 
		       MEMBER_PWD = #{memberPwd}
		 where 
		       MEMBER_EMAIL= #{memberEmail}
	</update>
	
	<!-- 회원정보 수정을 위한 update -->
	<update id="updateMember" parameterType="member">
		update
		       member
		   set
		       MEMBER_PHONE = #{memberPhone}
			   ,MEMBER_PHOTO = #{memberPhoto}
			   ,NICK_NAME = #{memberNickname}
			   ,MEMBER_MODIFYDATE = sysdate
	     where
	           MEMBER_EMAIL = #{memberEmail}
	</update>
	
	<!-- 회원탈퇴를 위한 상태 update  -->
	<update id="deleteMember" parameterType="String">
		update
		       member
		   set 
		       status = 'N'
		 where 
		       MEMBER_EMAIL = #{memberEmail}
		   and 
		       status != 'N'
	</update>
	
	<!-- 게시판별 게시글 조회를 위한 select -->
	<select id="selectBoardListCount" parameterType="java.util.HashMap" resultType="_int" >
		select
				count(*)
		 from
		 		board b
		 join
		 		member on(board_writer = member_no)
		 where
		 		b.status = 'Y'
		   	
		 	<if test='boardType == "1"'>
		 		and board_type = 1
		 	</if>
		 	<if test='boardType == "2"'>
		 		and board_type = 2
		 	</if>				
		  and 
		  	    MEMBER_NO = #{memberNo}
	</select>
	
	<select id="selectBoardList" parameterType="java.util.HashMap" resultMap="boardResultSet">
		select
				board_no,
				board_title,
				nick_name,
				count,
				enroll_date,
				board_type,
				REPORT_COUNT
		  from
		  		board
		  join
		  		member on(board_writer = member_no)
		 where
		 		board.status = 'Y'
		 	<if test='boardType == "1"'>
		 		and board_type = 1
		 	</if>
		 	<if test='boardType == "2"'>
		 		and board_type = 2
		 	</if>		
		     and 
		        MEMBER_NO = #{memberNo}			
		   order
			  by
			   	board_no desc	
	</select>
	
	<!-- 댓글 리스트 조회 -->
	<select id="selectReplyListCount" parameterType="_int" resultType="_int">
		SELECT
			COUNT(*)
		FROM 
			BOARD_REPLY
		JOIN 
			BOARD USING(BOARD_NO)
		WHERE 
		    MEMBER_NO = #{memberNo}
			
	</select>
	
	<select id="selectReplyList" parameterType="_int" resultMap="replyResultSet">
		SELECT
			BOARD_NO,
		BO_REPLY_NO,
		BO_REPLY_STATUS,
		BOARD_TYPE,
		MEMBER_NO,
		BO_REPLY_CONTENT,
		BO_REPLY_DATE
		FROM 
			BOARD_REPLY
		JOIN
			BOARD USING(BOARD_NO)
		WHERE 
		      MEMBER_NO = #{memberNo}
		
	</select>
	
	
	
	<!-- 참여 모임 리스트 조회를 위한 select -->
	<!-- 내가 만든 모임  : 화면에서 완료 띄워주기-->
	<select id="selectMyMeetingListCount" parameterType="int" resultType="_int">
		SELECT
			   COUNT(*)
		  FROM 
			   MEETING
		 WHERE
               MEMBER_NO = #{memberNo}
	</select>
	
	<select id="selectMyMeetingList" parameterType="int" resultMap="meetingResultSet">
		SELECT
			   *
		  FROM
			   MEETING
		 WHERE	
		       MEMBER_NO = #{memberNo}
		 ORDER
		    BY 
		       MEETING_NO DESC   
	</select>
		      
	
	<!-- 대기, 참여한 모임-->
	<select id="selectMeetingListCount" parameterType="java.util.HashMap" resultType="_int">
		SELECT
			   COUNT(*)
		  FROM
			   MEETING M
          JOIN 
               MEETING_USER MU USING(MEETING_NO)
		 WHERE 
		 <choose>
		 	<when test='check == "Y"'>
		 		MEETING_ACCEPT = 'Y'
		 	</when>
			<otherwise>
				MEETING_ACCEPT = 'N'
			</otherwise>
		 </choose>    
           AND 
               MU.MEMBER_NO = #{memberNo}
	</select>
	
	<select id="selectMeetingList" parameterType="java.util.HashMap" resultMap="meetingResultSet">
		SELECT
			   *
		  FROM
			   MEETING
          JOIN 
               MEETING_USER MU USING(MEETING_NO)
		 WHERE 
		 	<if test='check == "Y"'>
		 		MEETING_ACCEPT = 'Y'
		 	</if>
			<if test='check == "N"'>
				MEETING_ACCEPT = 'N'
			</if>
		  
		 AND 
               MU.MEMBER_NO = #{memberNo}
         ORDER
		    BY 
		       MEETING_NO DESC     
	</select>
	
	<!-- 컬렉션 리스트 조회를 위한 select -->
	<select id="selectCollectionList" resultMap="collectionResultSet" parameterType="_int">
		SELECT 
			COLLECTION_NO,
			COLLECTION_TITLE,
			CHANGE_NAME,
			m.NICK_NAME,
			c.MEMBER_NO 
		FROM
			COLLECTION c
		JOIN 
            MEMBER m ON c.MEMBER_NO = m.MEMBER_NO
		WHERE
			c.STATUS = 'Y'
			AND c.MEMBER_NO = #{memberNo}
		ORDER BY
			COLLECTION_ENROLL
	</select>
	
	<!-- 좋아요한 컬렉션 리스트 조회를 위한 select -->
	<select id="selectLikeCollection" resultMap="collectionResultSet" parameterType="_int">
		SELECT 
			COLLECTION_NO,
			COLLECTION_TITLE,
			CHANGE_NAME,
			m.NICK_NAME,
			c.MEMBER_NO 
		FROM
			COLLECTION c
		JOIN 
            MEMBER m ON c.MEMBER_NO = m.MEMBER_NO
        JOIN 
            COLLECTION_LIKE USING(COLLECTION_NO)
		WHERE
			c.STATUS = 'Y'
			AND c.MEMBER_NO = #{memberNo}
			AND COLLECTION_LIKE = 1
		ORDER BY
			COLLECTION_ENROLL
	</select>
	
	<!-- 리얼평 조회를 위한 select -->
	<select id="selectCommentListCount" resultType="_int" parameterType="_int" >
		SELECT
			  COUNT(*)
		  FROM
		      COMMENTS C
		 WHERE 
		      MEMBER_NO = #{memberNo}
	</select>
	
	<select id="selectCommentsList" parameterType="_int" resultMap="commentsResultSet">
		SELECT
			  MEMBER_NO,
		      COMMENT_NO,
		      COMMENT_CONTENT,
		      TO_CHAR(C.COMMENT_ENROLLDATE,'YYYY-MM-DD') as "COMMENTENROLLDATE",
		      SPOILER,
		      MOVIE_TITLE,
		      MOVIE_YEAR
		  FROM
		      COMMENTS C
		 WHERE 
		      MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 좋아요한 리얼평 리스트를 위한 select -->
	<select id="selectLikeCommentsCount" parameterType="java.util.HashMap" resultType="_int">
		SELECT
			  COUNT(*)
		  FROM
		      COMMENTS C
		 JOIN 
		      COMMENT_LIKE CL USING(COMMENT_NO)
	    WHERE 
			  COMMENT_WRITER = #{memberNo}
		  AND 
		  <if test='check == "Y"'>
		      COMMENT_LIKE = 'Y'
	      AND 
	          COMMENT_DISLIKE = 'N'
	      </if>    
	      <if test='check == "N"'>
	      	COMMENT_LIKE = 'N'
	      AND 
	          COMMENT_DISLIKE = 'Y'
	      </if>
	</select>
	
	<select id="selectLikeComments" parameterType="java.util.HashMap" resultMap="commentsResultSet" >
		SELECT
			C.COMMENT_CONTENT,
			C.MEMBER_NO,
			C.MOVIE_TITLE,
			C.MOVIE_YEAR,
			C.STATUS,
			TO_CHAR(C.COMMENT_ENROLLDATE,'YYYY-MM-DD') as "COMMENTENROLLDATE",
			CL.COMMENT_WRITER,
			CL.COMMENT_LIKE,
			CL.COMMENT_DISLIKE
			FROM COMMENTS C
			JOIN COMMENT_LIKE CL USING(COMMENT_NO)
			WHERE 
			  COMMENT_WRITER = #{memberNo}
		  AND 
		  <if test='check == "Y"'>
		      COMMENT_LIKE = 'Y'
	      AND 
	          COMMENT_DISLIKE = 'N'
	      </if>    
	      <if test='check == "N"'>
	      	COMMENT_LIKE = 'N'
	      AND 
	          COMMENT_DISLIKE = 'Y'
	      </if>     
	</select>
</mapper>
