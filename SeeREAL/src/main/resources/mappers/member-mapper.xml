<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap id="memberResultSet" type="member">
		<result column="MEMBER_NO" property="memberNo"/>
		<result column="MEMBER_EMAIL" property="memberEmail"/>
		<result column="NICK_NAME" property="memberNickname"/>
		<result column="MEMBER_PWD" property="memberPwd"/>
		<result column="MEMBER_PHONE" property="memberPhone"/>
		<result column="MEMBER_PHOTO" property="memberPhoto"/>
		<result column="MEMBER_CREATEDATE" property="memberCreateDate"/>
		<result column="MEMBER_MODIFYDATE" property="memberModifyDate"/>
		<result column="STATUS" property="status"/>
	</resultMap>

	<!-- 이메일 중복체크를 위한 select -->
	<select id="selectEmail" parameterType="String" resultType="_int">
		select
			   count(member_email)
		  from 
		       member
		 where 
		       status = 'Y'
		   and 
		       member_email = #{email}
	</select>

	<!-- 이메일 전송 후, 인증을 위한 Cert테이블에 insert -->
	<insert id="insertCert" parameterType="cert">
		insert 
		  into 
		       cert
		       (
		       who
		       ,secret
		       ,when
		       ) 
		values
		       (
		       #{who}
		       ,#{secret}
		       ,sysdate
		       )
	</insert>
	
	<!-- 이메일 인증 번호 체크 select -->
	<select id = "selectCert" parameterType="cert" resultType="_int">
		select
			   COUNT(*)
		  from
			   cert
		 where 
			   who = #{who}
		   and 
		       secret = #{secret}
		   and 
		       when between sysdate - 5/24/60 and sysdate
	</select>
	
	<delete id="deleteCert" parameterType="cert">
		delete 
		  from 
		       cert
		 where 
		       who = #{who}
		   and 
		       secret = #{secret}
	</delete>
	
	<!-- 닉네임 중복체크를 위한 select -->
	<select id ="selectNickname" parameterType="String" resultType="_int">
		select
			   count(*)
	      from 
	           member
	     where 
	           status='Y'
	       and 
	           nick_name = #{nickname}
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="member">
		insert 
		  into 
		       member
		       (
		       MEMBER_NO,
			   NICK_NAME,
			   MEMBER_PWD,
			    MEMBER_PHONE,
			   MEMBER_EMAIL
			   )
	   values
	          (
	          seq_mno.nextval,
	          #{memberNickname}, 
	          #{memberPwd},
	          #{memberPhone},
	          #{memberEmail} 
	          )
	</insert>
	
	<!--  로그인을 위한 select -->
	<select id="selectMember" parameterType="member" resultMap="memberResultSet">
		select 
			   MEMBER_NO
			   ,NICK_NAME
			   ,MEMBER_PWD
			   ,MEMBER_PHONE
			   ,MEMBER_EMAIL
			   ,MEMBER_PHOTO
			   ,MEMBER_CREATEDATE
			   ,MEMBER_MODIFYDATE
			   ,STATUS
		  from 
		       member
		 where 
		       (status != 'N' or status != 'S')
		   and 
		       MEMBER_EMAIL = #{memberEmail}
	</select>

	<!-- 비밀번호 수정을 위한 update  -->
	<update id="updatePwd" parameterType="member">
		update 
		       member
		   set 
		       MEMBER_PWD = #{memberPwd}
		 where 
		       MEMBER_EMAIL= #{memberEmail}
	</update>
	
	<!-- 회원정보 수정을 위한 update -->
	<update id="updateMember" parameterType="member">
		update
		       member
		   set
		       MEMBER_PHONE = #{memberPhone}
			   ,MEMBER_PHOTO = #{memberPhoto}
			   ,NICK_NAME = #{memberNickname}
			   ,MEMBER_MODIFYDATE = sysdate
	     where
	           MEMBER_EMAIL = #{memberEmail}
	</update>
	
	<!-- 회원탈퇴를 위한 상태 update  -->
	<update id="deleteMember" parameterType="String">
		update
		       member
		   set 
		       status = 'N'
		 where 
		       MEMBER_EMAIL = #{memberEmail}
		   and 
		       status != 'N'
	</update>
	
	
</mapper>
