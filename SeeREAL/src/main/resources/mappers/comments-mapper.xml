<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="comments-mapper">
	<resultMap id="comments-ratingSet" type="movieRating">
		<result column="RATING" property="rating"/>
		
	</resultMap>
	<resultMap id="commentsListView" type="comments">
		<result column="COMMENT_NO" property="commentNo"/>
		<result column="COMMENT_CONTENT" property="commentContent"/>
		<result column="COMMENT_ENROLLDATE" property="commentEnrollDate"/>
		<result column="SPOILER" property="spoiler"/>
		<result column="MOVIE_TITLE" property="movieTitle"/>
		<result column="MOVIE_YEAR" property="movieYear"/>
		<result column="MEMBER_NO" property="memberNo"/>
		<result column="COMMENT_REPORT" property="commentReport"/>

	</resultMap>
	<resultMap id="tess1" type="member">
		<result column="NICK_NAME" property="memberNickname"/>
	</resultMap>
	
	
	
	<select id="ratingGet" resultType="_double" parameterType="MovieRating">
		SELECT
		      ROUND(SUM(RATING)/COUNT(*),1)
		  FROM
		      MOVIE_RATING
		 WHERE
		      MOVIE_TITLE = #{movieTitle}
		   AND
		      MOVIE_YEAR = #{movieYear}
	</select>
	<insert id="ratingCheck" parameterType="MovieRating">
		INSERT
		  INTO
		      MOVIE_RATING
		      (
		      MEMBER_NO,
		      RATING,
		      MOVIE_TITLE,
		      MOVIE_YEAR
		      )
		  VALUES
		  	  (
		  	  #{memberNo},
		  	  #{rating},
		  	  #{movieTitle},
		  	  #{movieYear}
		  	  )
		  
	</insert>
	<update id="ratingUpdate" parameterType="MovieRating">
		UPDATE
			  MOVIE_RATING
		   SET
		      RATING=#{rating}
		 WHERE
		      MOVIE_TITLE=#{movieTitle}
		   AND
		      MOVIE_YEAR=#{movieYear}
		   AND
		      MEMBER_NO=#{memberNo}
			  
	</update>
	<!--  
	<select id="commentsList" parameterType="Comments" resultMap="commentsListView">
		SELECT
		      COMMENT_NO,
		      COMMENT_CONTENT,
		      COMMENT_ENROLLDATE,
		      SPOLER,
		      COMMENT_REPORT,
		      MOVIE_TITLE,
		      MOVIE_YEAR,
		      MEMBER_ID
		  FROM
		      COMMENTS 
		  JOIN 
		  	  MEMBER 
		 USING 
		 	  (MEMBER_NO)
		 WHERE
		      STATUS='Y'
		  AND
		     MOVIE_TITLE=#{movieTitle}
		  AND
		     MOVIE_YEAR=#{movieYear} 
	</select>
	-->
	<select id="commentsList" parameterType="Comments" resultType="hashmap">
		SELECT
			  MEMBER_NO,
		      C.COMMENT_NO,
		      C.COMMENT_CONTENT,
		      TO_CHAR(C.COMMENT_ENROLLDATE,'YYYY-MM-DD') "COMMENTENROLLDATE",
		      C.SPOILER,
		      C.COMMENT_REPORT,
		      C.MOVIE_TITLE,
		      C.MOVIE_YEAR,
		      M.NICK_NAME
		  FROM
		      COMMENTS C
		  JOIN 
		  	  MEMBER M
		 USING 
		 	  (MEMBER_NO)
		 WHERE
		      C.STATUS='Y'
		  AND
		     C.MOVIE_TITLE=#{movieTitle}
		  AND
		     C.MOVIE_YEAR=#{movieYear} 
		  
	</select>
	<insert id="commentsWrite" parameterType="Comments">
		<!-- 
		INSERT
		  INTO
		      COMMENTS
		      (
		      COMMENT_NO,
		      COMMENT_CONTENT,		      
		      SPOILER,
		      MOVIE_TITLE,
		      MOVIE_YEAR,
		      MEMBER_NO
		      )
		VALUES
			  (
			  SEQ_COMNO.NEXTVAL,
			  #{commentContent},			  
			  #{spoiler},
			  #{movieTitle},
			  #{movieYear},
			  #{memberNo}
			  )
		 -->
		 INSERT ALL  
		 	INTO 
		      COMMENTS 
		      (
		      COMMENT_NO,
		      COMMENT_CONTENT,		      
		      SPOILER,
		      MOVIE_TITLE,
		      MOVIE_YEAR,
		      MEMBER_NO
		      )
		VALUES
			  (
			  SEQ_COMNO.NEXTVAL,
			  #{commentContent},			  
			  #{spoiler},
			  #{movieTitle},
			  #{movieYear},
			  #{memberNo}
			  )
		  INTO 
			  COMMENT_LIKE 
			  (COMMENT_WRITER,
			  COMMENT_LIKE,
			  COMMENT_DISLIKE,
			  COMMENT_NO
			  ) 
			  VALUES
			  (
			  #{memberNo},
			  'N',
			  'N',
			  SEQ_COMNO.CURRVAL
			  )
			SELECT 
			  	  * 
			  FROM 
			  	  DUAL; 
		    
	</insert>
	<update id="thumbsUp" parameterType="Comments">
		UPDATE
		      COMMENT_LIKE
		  SET
		      COMMENT_LIKE = 'Y',
		      COMMENT_DISLIKE = 'N'
		WHERE
		 	 COMMENT_NO=#{commentNo}
		  
		     
		  	  
	</update>
	
	<select id="showCommentsLike" parameterType="Comments" resultType="arraylist">
		SELECT 
		      COMMENT_NO
		  FROM
		      COMMENT_LIKE
		 WHERE
		      COMMENT_WRITER = #{memberNo}
		   AND
		      COMMENT_NO IN (SELECT
		                          COMMENT_NO
		                      FROM
		                          COMMENTS
		                     WHERE
		                          MOVIE_TITLE=#{movieTitle}
		                       AND
		                          MOVIE_YEAR=#{movieYear} )
	
	</select>
</mapper>